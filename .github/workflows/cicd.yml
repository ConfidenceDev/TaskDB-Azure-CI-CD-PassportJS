name: CI-CD

env:
  resourceGroup: "learn"
  clusterName: "taskcluster"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: confidencedev/taskdb
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group ${{ env.resourceGroup }} --name ${{ env.clusterName }}

      - name: Install kubectl cli
        run: |
          sudo az aks install-cli
          secrets=("GOOGLE-CLIENT-ID" "GOOGLE-CLIENT-SECRET" "GITHUB-CLIENT-ID" "GITHUB-CLIENT-SECRET" "SESSION-SECRET" "DB-NAME" "DB-USERNAME" "DB-PASSWORD" "DB-HOST" "DB-DIALECT")

          for secret in "${secrets[@]}"
          do
              value=$(az keyvault secret show --name "$secret" --vault-name "taskdbstore" --query "value" --output tsv)
              echo "$secret=$value" >> $GITHUB_ENV
          done

      - name: Apply Secrets Deploy to Kubernetes
        run: |
          sed -i "s/google-client-id/${{env.GOOGLE-CLIENT-ID}}/g;s/google-client-secret/${{env.GOOGLE-CLIENT-SECRET}}/g;s/github-client-id/${{env.GITHUB-CLIENT-ID}}/g;s/github-client-secret/${{env.GITHUB-CLIENT-SECRET}}/g;s/session-secret/${{env.SESSION-SECRET}}/g;s/db-name/${{env.DB-NAME}}/g;s/db-username/${{env.DB-USERNAME}}/g;s/db-password/${{env.DB-PASSWORD}}/g;s/db-host/${{env.DB-HOST}}/g;s/db-dialect/${{env.DB-DIALECT}}/g" deployment.yml

          kubectl apply -f deployment.yml
