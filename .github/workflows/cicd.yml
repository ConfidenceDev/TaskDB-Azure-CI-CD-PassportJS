name: CI-CD

env:
  resourceGroup: "learn"
  clusterName: "taskcluster"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Build and Push Docker Image
      #   uses: mr-smithers-excellent/docker-build-push@v6
      #   with:
      #     image: confidencedev/taskdb
      #     tags: latest
      #     registry: docker.io
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group ${{ env.resourceGroup }} --name ${{ env.clusterName }}

      - name: Install kubectl cli
        run: |
          sudo az aks install-cli
          secrets=("DB-HOST" "DB-USERNAME" "DB-PASSWORD")

          for secret in "${secrets[@]}"
          do
              value=$(az keyvault secret show --name "$secret" --vault-name "taskdbstore" --query "value" --output tsv)
              echo "Secret: $secret, Value: $value"
              echo "$secret=$value" >> $GITHUB_ENV
          done

      - name: Use Secrets
        run: |
          echo "DB Host: ${{ env.DB-HOST }}"
          echo "DB Host: ${{ env.DB-USERNAME }}"
          echo "DB Host: ${{ env.DB-PASSWORD }}"

      # az keyvault secret show --name "DB-HOST" --vault-name "taskdbstore" --query "value" --output tsv
      # - name: Apply Kubernetes Deployment
      #   run: |
      #     kubectl apply -f deployment.yml
